{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/storage.ts"],"sourcesContent":["import { PeriodEntry, DailyEntry, UserSettings, CycleAnalytics } from '@/types/period';\n\nconst STORAGE_KEYS = {\n  PERIODS: 'period-tracker-periods',\n  DAILY_ENTRIES: 'period-tracker-daily-entries',\n  SETTINGS: 'period-tracker-settings',\n  ANALYTICS: 'period-tracker-analytics',\n} as const;\n\n// Default settings\nconst DEFAULT_SETTINGS: UserSettings = {\n  cycleLength: 28,\n  periodLength: 5,\n  notifications: {\n    periodReminder: true,\n    ovulationReminder: true,\n    symptomReminder: false,\n  },\n  theme: 'system',\n  firstDayOfWeek: 1,\n};\n\nexport class PeriodStorage {\n  // Period entries\n  static getPeriods(): PeriodEntry[] {\n    if (typeof window === 'undefined') return [];\n    const data = localStorage.getItem(STORAGE_KEYS.PERIODS);\n    return data ? JSON.parse(data) : [];\n  }\n\n  static savePeriods(periods: PeriodEntry[]): void {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(STORAGE_KEYS.PERIODS, JSON.stringify(periods));\n  }\n\n  static addPeriod(period: PeriodEntry): void {\n    const periods = this.getPeriods();\n    periods.push(period);\n    this.savePeriods(periods);\n  }\n\n  static updatePeriod(periodId: string, updates: Partial<PeriodEntry>): void {\n    const periods = this.getPeriods();\n    const index = periods.findIndex(p => p.id === periodId);\n    if (index !== -1) {\n      periods[index] = { ...periods[index], ...updates, updatedAt: new Date().toISOString() };\n      this.savePeriods(periods);\n    }\n  }\n\n  static deletePeriod(periodId: string): void {\n    const periods = this.getPeriods().filter(p => p.id !== periodId);\n    this.savePeriods(periods);\n  }\n\n  // Daily entries\n  static getDailyEntries(): DailyEntry[] {\n    if (typeof window === 'undefined') return [];\n    const data = localStorage.getItem(STORAGE_KEYS.DAILY_ENTRIES);\n    return data ? JSON.parse(data) : [];\n  }\n\n  static saveDailyEntries(entries: DailyEntry[]): void {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(STORAGE_KEYS.DAILY_ENTRIES, JSON.stringify(entries));\n  }\n\n  static getDailyEntry(date: string): DailyEntry | null {\n    const entries = this.getDailyEntries();\n    return entries.find(entry => entry.date === date) || null;\n  }\n\n  static saveDailyEntry(entry: DailyEntry): void {\n    const entries = this.getDailyEntries();\n    const existingIndex = entries.findIndex(e => e.date === entry.date);\n    \n    if (existingIndex !== -1) {\n      entries[existingIndex] = entry;\n    } else {\n      entries.push(entry);\n    }\n    \n    this.saveDailyEntries(entries);\n  }\n\n  // Settings\n  static getSettings(): UserSettings {\n    if (typeof window === 'undefined') return DEFAULT_SETTINGS;\n    const data = localStorage.getItem(STORAGE_KEYS.SETTINGS);\n    return data ? { ...DEFAULT_SETTINGS, ...JSON.parse(data) } : DEFAULT_SETTINGS;\n  }\n\n  static saveSettings(settings: UserSettings): void {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(STORAGE_KEYS.SETTINGS, JSON.stringify(settings));\n  }\n\n  // Analytics\n  static getAnalytics(): CycleAnalytics | null {\n    if (typeof window === 'undefined') return null;\n    const data = localStorage.getItem(STORAGE_KEYS.ANALYTICS);\n    return data ? JSON.parse(data) : null;\n  }\n\n  static saveAnalytics(analytics: CycleAnalytics): void {\n    if (typeof window === 'undefined') return;\n    localStorage.setItem(STORAGE_KEYS.ANALYTICS, JSON.stringify(analytics));\n  }\n\n  // Utility methods\n  static clearAllData(): void {\n    if (typeof window === 'undefined') return;\n    Object.values(STORAGE_KEYS).forEach(key => {\n      localStorage.removeItem(key);\n    });\n  }\n\n  static exportData(): string {\n    const data = {\n      periods: this.getPeriods(),\n      dailyEntries: this.getDailyEntries(),\n      settings: this.getSettings(),\n      analytics: this.getAnalytics(),\n      exportDate: new Date().toISOString(),\n    };\n    return JSON.stringify(data, null, 2);\n  }\n\n  static importData(jsonData: string): boolean {\n    try {\n      const data = JSON.parse(jsonData);\n      if (data.periods) this.savePeriods(data.periods);\n      if (data.dailyEntries) this.saveDailyEntries(data.dailyEntries);\n      if (data.settings) this.saveSettings(data.settings);\n      if (data.analytics) this.saveAnalytics(data.analytics);\n      return true;\n    } catch (error) {\n      console.error('Failed to import data:', error);\n      return false;\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/periodCalculations.ts"],"sourcesContent":["import { PeriodEntry, DailyEntry, CycleAnalytics } from '@/types/period';\n\nexport class PeriodCalculations {\n  /**\n   * Calculate cycle analytics from period entries\n   */\n  static calculateAnalytics(periods: PeriodEntry[], dailyEntries: DailyEntry[]): CycleAnalytics {\n    if (periods.length === 0) {\n      return {\n        averageCycleLength: 28,\n        averagePeriodDuration: 5,\n        nextPredictedPeriod: this.addDays(new Date(), 28).toISOString().split('T')[0],\n        fertilityWindow: {\n          start: this.addDays(new Date(), 14).toISOString().split('T')[0],\n          end: this.addDays(new Date(), 18).toISOString().split('T')[0],\n        },\n        ovulationDate: this.addDays(new Date(), 14).toISOString().split('T')[0],\n        cycleRegularity: 'unknown',\n        totalCycles: 0,\n      };\n    }\n\n    const sortedPeriods = periods.sort((a, b) => new Date(a.startDate).getTime() - new Date(b.startDate).getTime());\n    const cycleLengths = this.calculateCycleLengths(sortedPeriods);\n    const periodDurations = this.calculatePeriodDurations(sortedPeriods);\n\n    const averageCycleLength = cycleLengths.length > 0 \n      ? Math.round(cycleLengths.reduce((sum, length) => sum + length, 0) / cycleLengths.length)\n      : 28;\n\n    const averagePeriodDuration = periodDurations.length > 0\n      ? Math.round(periodDurations.reduce((sum, duration) => sum + duration, 0) / periodDurations.length)\n      : 5;\n\n    const lastPeriod = sortedPeriods[sortedPeriods.length - 1];\n    const nextPredictedPeriod = this.addDays(new Date(lastPeriod.startDate), averageCycleLength);\n\n    const ovulationDate = this.addDays(nextPredictedPeriod, -14);\n    const fertilityStart = this.addDays(ovulationDate, -5);\n    const fertilityEnd = this.addDays(ovulationDate, 1);\n\n    const cycleRegularity = this.determineCycleRegularity(cycleLengths);\n\n    return {\n      averageCycleLength,\n      averagePeriodDuration,\n      nextPredictedPeriod: nextPredictedPeriod.toISOString().split('T')[0],\n      fertilityWindow: {\n        start: fertilityStart.toISOString().split('T')[0],\n        end: fertilityEnd.toISOString().split('T')[0],\n      },\n      ovulationDate: ovulationDate.toISOString().split('T')[0],\n      cycleRegularity,\n      totalCycles: cycleLengths.length,\n    };\n  }\n\n  /**\n   * Calculate cycle lengths between periods\n   */\n  private static calculateCycleLengths(sortedPeriods: PeriodEntry[]): number[] {\n    const cycleLengths: number[] = [];\n    \n    for (let i = 1; i < sortedPeriods.length; i++) {\n      const currentStart = new Date(sortedPeriods[i].startDate);\n      const previousStart = new Date(sortedPeriods[i - 1].startDate);\n      const cycleLength = Math.round((currentStart.getTime() - previousStart.getTime()) / (1000 * 60 * 60 * 24));\n      \n      if (cycleLength > 0 && cycleLength <= 45) { // Filter out unrealistic cycle lengths\n        cycleLengths.push(cycleLength);\n      }\n    }\n    \n    return cycleLengths;\n  }\n\n  /**\n   * Calculate period durations\n   */\n  private static calculatePeriodDurations(periods: PeriodEntry[]): number[] {\n    return periods\n      .filter(period => period.endDate)\n      .map(period => {\n        const start = new Date(period.startDate);\n        const end = new Date(period.endDate!);\n        return Math.round((end.getTime() - start.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n      })\n      .filter(duration => duration > 0 && duration <= 10); // Filter out unrealistic durations\n  }\n\n  /**\n   * Determine cycle regularity\n   */\n  private static determineCycleRegularity(cycleLengths: number[]): 'regular' | 'irregular' | 'unknown' {\n    if (cycleLengths.length < 3) return 'unknown';\n\n    const average = cycleLengths.reduce((sum, length) => sum + length, 0) / cycleLengths.length;\n    const variance = cycleLengths.reduce((sum, length) => sum + Math.pow(length - average, 2), 0) / cycleLengths.length;\n    const standardDeviation = Math.sqrt(variance);\n\n    // If standard deviation is less than 7 days, consider it regular\n    return standardDeviation < 7 ? 'regular' : 'irregular';\n  }\n\n  /**\n   * Predict next N periods\n   */\n  static predictNextPeriods(periods: PeriodEntry[], count: number = 3): string[] {\n    if (periods.length === 0) return [];\n\n    const analytics = this.calculateAnalytics(periods, []);\n    const predictions: string[] = [];\n    let nextDate = new Date(analytics.nextPredictedPeriod);\n\n    for (let i = 0; i < count; i++) {\n      predictions.push(nextDate.toISOString().split('T')[0]);\n      nextDate = this.addDays(nextDate, analytics.averageCycleLength);\n    }\n\n    return predictions;\n  }\n\n  /**\n   * Get fertility status for a specific date\n   */\n  static getFertilityStatus(date: string, analytics: CycleAnalytics): {\n    status: 'low' | 'medium' | 'high';\n    phase: 'menstrual' | 'follicular' | 'ovulation' | 'luteal';\n    probability: number;\n  } {\n    const targetDate = new Date(date);\n    const ovulationDate = new Date(analytics.ovulationDate);\n    const daysDiff = Math.round((targetDate.getTime() - ovulationDate.getTime()) / (1000 * 60 * 60 * 24));\n\n    // Determine phase and fertility\n    if (daysDiff >= -5 && daysDiff <= 1) {\n      // Fertile window\n      if (daysDiff >= -1 && daysDiff <= 1) {\n        return { status: 'high', phase: 'ovulation', probability: 0.9 };\n      } else {\n        return { status: 'medium', phase: 'follicular', probability: 0.6 };\n      }\n    } else if (daysDiff > 1 && daysDiff <= 14) {\n      return { status: 'low', phase: 'luteal', probability: 0.1 };\n    } else {\n      return { status: 'low', phase: 'menstrual', probability: 0.05 };\n    }\n  }\n\n  /**\n   * Check if a date is during predicted period\n   */\n  static isPredictedPeriodDate(date: string, analytics: CycleAnalytics): boolean {\n    const targetDate = new Date(date);\n    const periodStart = new Date(analytics.nextPredictedPeriod);\n    const periodEnd = this.addDays(periodStart, analytics.averagePeriodDuration - 1);\n\n    return targetDate >= periodStart && targetDate <= periodEnd;\n  }\n\n  /**\n   * Get cycle day for a specific date\n   */\n  static getCycleDay(date: string, lastPeriodStart: string, cycleLength: number): number {\n    const targetDate = new Date(date);\n    const lastPeriod = new Date(lastPeriodStart);\n    const daysDiff = Math.round((targetDate.getTime() - lastPeriod.getTime()) / (1000 * 60 * 60 * 24));\n    \n    return ((daysDiff % cycleLength) + cycleLength) % cycleLength + 1;\n  }\n\n  /**\n   * Utility function to add days to a date\n   */\n  private static addDays(date: Date, days: number): Date {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  }\n\n  /**\n   * Format date to YYYY-MM-DD\n   */\n  static formatDate(date: Date): string {\n    return date.toISOString().split('T')[0];\n  }\n\n  /**\n   * Get date range for calendar view\n   */\n  static getDateRange(startDate: Date, months: number): string[] {\n    const dates: string[] = [];\n    const current = new Date(startDate);\n    const endDate = new Date(startDate);\n    endDate.setMonth(endDate.getMonth() + months);\n\n    while (current <= endDate) {\n      dates.push(this.formatDate(current));\n      current.setDate(current.getDate() + 1);\n    }\n\n    return dates;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/hooks/usePeriodData.ts"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { PeriodEntry, DailyEntry, UserSettings, CycleAnalytics } from '@/types/period';\nimport { PeriodStorage } from '@/lib/storage';\nimport { PeriodCalculations } from '@/lib/periodCalculations';\n\nexport function usePeriodData() {\n  const [periods, setPeriods] = useState<PeriodEntry[]>([]);\n  const [dailyEntries, setDailyEntries] = useState<DailyEntry[]>([]);\n  const [settings, setSettings] = useState<UserSettings | null>(null);\n  const [analytics, setAnalytics] = useState<CycleAnalytics | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Load data from storage\n  useEffect(() => {\n    const loadData = () => {\n      try {\n        const periodsData = PeriodStorage.getPeriods();\n        const dailyData = PeriodStorage.getDailyEntries();\n        const settingsData = PeriodStorage.getSettings();\n        \n        setPeriods(periodsData);\n        setDailyEntries(dailyData);\n        setSettings(settingsData);\n        \n        // Calculate analytics\n        const analyticsData = PeriodCalculations.calculateAnalytics(periodsData, dailyData);\n        setAnalytics(analyticsData);\n        PeriodStorage.saveAnalytics(analyticsData);\n      } catch (error) {\n        console.error('Error loading period data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Recalculate analytics when periods or daily entries change\n  useEffect(() => {\n    if (periods.length > 0 || dailyEntries.length > 0) {\n      const analyticsData = PeriodCalculations.calculateAnalytics(periods, dailyEntries);\n      setAnalytics(analyticsData);\n      PeriodStorage.saveAnalytics(analyticsData);\n    }\n  }, [periods, dailyEntries]);\n\n  // Period management\n  const addPeriod = useCallback((period: Omit<PeriodEntry, 'id' | 'createdAt' | 'updatedAt'>) => {\n    const newPeriod: PeriodEntry = {\n      ...period,\n      id: crypto.randomUUID(),\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    };\n    \n    const updatedPeriods = [...periods, newPeriod];\n    setPeriods(updatedPeriods);\n    PeriodStorage.savePeriods(updatedPeriods);\n  }, [periods]);\n\n  const updatePeriod = useCallback((periodId: string, updates: Partial<PeriodEntry>) => {\n    const updatedPeriods = periods.map(period =>\n      period.id === periodId\n        ? { ...period, ...updates, updatedAt: new Date().toISOString() }\n        : period\n    );\n    setPeriods(updatedPeriods);\n    PeriodStorage.savePeriods(updatedPeriods);\n  }, [periods]);\n\n  const deletePeriod = useCallback((periodId: string) => {\n    const updatedPeriods = periods.filter(period => period.id !== periodId);\n    setPeriods(updatedPeriods);\n    PeriodStorage.savePeriods(updatedPeriods);\n  }, [periods]);\n\n  // Daily entry management\n  const getDailyEntry = useCallback((date: string): DailyEntry | null => {\n    return dailyEntries.find(entry => entry.date === date) || null;\n  }, [dailyEntries]);\n\n  const saveDailyEntry = useCallback((entry: DailyEntry) => {\n    const updatedEntries = dailyEntries.filter(e => e.date !== entry.date);\n    updatedEntries.push(entry);\n    setDailyEntries(updatedEntries);\n    PeriodStorage.saveDailyEntries(updatedEntries);\n  }, [dailyEntries]);\n\n  // Settings management\n  const updateSettings = useCallback((newSettings: Partial<UserSettings>) => {\n    if (!settings) return;\n    \n    const updatedSettings = { ...settings, ...newSettings };\n    setSettings(updatedSettings);\n    PeriodStorage.saveSettings(updatedSettings);\n  }, [settings]);\n\n  // Utility functions\n  const getCurrentCycleDay = useCallback((date?: string): number => {\n    if (!analytics || periods.length === 0) return 1;\n    \n    const targetDate = date || new Date().toISOString().split('T')[0];\n    const lastPeriod = periods.sort((a, b) => \n      new Date(b.startDate).getTime() - new Date(a.startDate).getTime()\n    )[0];\n    \n    return PeriodCalculations.getCycleDay(\n      targetDate,\n      lastPeriod.startDate,\n      analytics.averageCycleLength\n    );\n  }, [analytics, periods]);\n\n  const getFertilityStatus = useCallback((date: string) => {\n    if (!analytics) return { status: 'low' as const, phase: 'menstrual' as const, probability: 0 };\n    return PeriodCalculations.getFertilityStatus(date, analytics);\n  }, [analytics]);\n\n  const isPeriodDate = useCallback((date: string): boolean => {\n    return dailyEntries.some(entry => entry.date === date && entry.isPeriod);\n  }, [dailyEntries]);\n\n  const isPredictedPeriodDate = useCallback((date: string): boolean => {\n    if (!analytics) return false;\n    return PeriodCalculations.isPredictedPeriodDate(date, analytics);\n  }, [analytics]);\n\n  const getNextPeriodPredictions = useCallback((count: number = 3): string[] => {\n    return PeriodCalculations.predictNextPeriods(periods, count);\n  }, [periods]);\n\n  // Data export/import\n  const exportData = useCallback((): string => {\n    return PeriodStorage.exportData();\n  }, []);\n\n  const importData = useCallback((jsonData: string): boolean => {\n    const success = PeriodStorage.importData(jsonData);\n    if (success) {\n      // Reload data after import\n      const periodsData = PeriodStorage.getPeriods();\n      const dailyData = PeriodStorage.getDailyEntries();\n      const settingsData = PeriodStorage.getSettings();\n      \n      setPeriods(periodsData);\n      setDailyEntries(dailyData);\n      setSettings(settingsData);\n    }\n    return success;\n  }, []);\n\n  const clearAllData = useCallback(() => {\n    PeriodStorage.clearAllData();\n    setPeriods([]);\n    setDailyEntries([]);\n    setSettings(PeriodStorage.getSettings());\n    setAnalytics(null);\n  }, []);\n\n  return {\n    // Data\n    periods,\n    dailyEntries,\n    settings,\n    analytics,\n    isLoading,\n    \n    // Period management\n    addPeriod,\n    updatePeriod,\n    deletePeriod,\n    \n    // Daily entry management\n    getDailyEntry,\n    saveDailyEntry,\n    \n    // Settings\n    updateSettings,\n    \n    // Utility functions\n    getCurrentCycleDay,\n    getFertilityStatus,\n    isPeriodDate,\n    isPredictedPeriodDate,\n    getNextPeriodPredictions,\n    \n    // Data management\n    exportData,\n    importData,\n    clearAllData,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 599, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 733, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 796, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 848, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 969, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/period/PeriodCalendar.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useMemo } from 'react';\nimport { usePeriodData } from '@/hooks/usePeriodData';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from '@/lib/utils';\n\ninterface CalendarDay {\n  date: string;\n  day: number;\n  isCurrentMonth: boolean;\n  isToday: boolean;\n  isPeriod: boolean;\n  isPredictedPeriod: boolean;\n  fertilityStatus: 'low' | 'medium' | 'high';\n  cycleDay?: number;\n}\n\nexport function PeriodCalendar() {\n  const {\n    analytics,\n    isPeriodDate,\n    isPredictedPeriodDate,\n    getFertilityStatus,\n    getCurrentCycleDay,\n  } = usePeriodData();\n\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  const calendarDays = useMemo(() => {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    \n    // Get first day of the month and last day\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    \n    // Get the first day of the week for the calendar\n    const startDate = new Date(firstDay);\n    startDate.setDate(startDate.getDate() - firstDay.getDay());\n    \n    // Get the last day of the week for the calendar\n    const endDate = new Date(lastDay);\n    endDate.setDate(endDate.getDate() + (6 - lastDay.getDay()));\n    \n    const days: CalendarDay[] = [];\n    const current = new Date(startDate);\n    \n    while (current <= endDate) {\n      const dateString = current.toISOString().split('T')[0];\n      const today = new Date().toISOString().split('T')[0];\n      \n      days.push({\n        date: dateString,\n        day: current.getDate(),\n        isCurrentMonth: current.getMonth() === month,\n        isToday: dateString === today,\n        isPeriod: isPeriodDate(dateString),\n        isPredictedPeriod: isPredictedPeriodDate(dateString),\n        fertilityStatus: getFertilityStatus(dateString).status,\n        cycleDay: getCurrentCycleDay(dateString),\n      });\n      \n      current.setDate(current.getDate() + 1);\n    }\n    \n    return days;\n  }, [currentDate, isPeriodDate, isPredictedPeriodDate, getFertilityStatus, getCurrentCycleDay]);\n\n  const navigateMonth = (direction: 'prev' | 'next') => {\n    setCurrentDate(prev => {\n      const newDate = new Date(prev);\n      newDate.setMonth(newDate.getMonth() + (direction === 'next' ? 1 : -1));\n      return newDate;\n    });\n  };\n\n  const monthNames = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  const getDayClassName = (day: CalendarDay) => {\n    const baseClasses = \"relative w-full h-12 flex items-center justify-center text-sm font-medium rounded-lg transition-all duration-200 hover:scale-105\";\n    \n    if (!day.isCurrentMonth) {\n      return cn(baseClasses, \"text-gray-300 dark:text-gray-600\");\n    }\n    \n    if (day.isToday) {\n      return cn(baseClasses, \"bg-gradient-to-br from-purple-500 to-pink-500 text-white shadow-lg\");\n    }\n    \n    if (day.isPeriod) {\n      return cn(baseClasses, \"bg-gradient-to-br from-red-400 to-pink-400 text-white shadow-md\");\n    }\n    \n    if (day.isPredictedPeriod) {\n      return cn(baseClasses, \"bg-gradient-to-br from-red-200 to-pink-200 dark:from-red-800 dark:to-pink-800 text-red-800 dark:text-red-200 border-2 border-dashed border-red-300 dark:border-red-600\");\n    }\n    \n    if (day.fertilityStatus === 'high') {\n      return cn(baseClasses, \"bg-gradient-to-br from-green-400 to-emerald-400 text-white shadow-md\");\n    }\n    \n    if (day.fertilityStatus === 'medium') {\n      return cn(baseClasses, \"bg-gradient-to-br from-yellow-300 to-orange-300 text-yellow-800 shadow-sm\");\n    }\n    \n    return cn(baseClasses, \"text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800\");\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-xl font-bold\">\n            {monthNames[currentDate.getMonth()]} {currentDate.getFullYear()}\n          </CardTitle>\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => navigateMonth('prev')}\n              className=\"h-8 w-8 p-0\"\n            >\n              ←\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setCurrentDate(new Date())}\n              className=\"text-xs px-2\"\n            >\n              Today\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => navigateMonth('next')}\n              className=\"h-8 w-8 p-0\"\n            >\n              →\n            </Button>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {/* Calendar Grid */}\n          <div className=\"grid grid-cols-7 gap-2\">\n            {/* Day headers */}\n            {dayNames.map(day => (\n              <div key={day} className=\"h-8 flex items-center justify-center text-xs font-medium text-gray-500 dark:text-gray-400\">\n                {day}\n              </div>\n            ))}\n            \n            {/* Calendar days */}\n            {calendarDays.map((day, index) => (\n              <div key={index} className={getDayClassName(day)}>\n                <span className=\"relative z-10\">{day.day}</span>\n                {day.cycleDay && day.isCurrentMonth && (\n                  <span className=\"absolute bottom-0 right-0 text-xs opacity-60\">\n                    {day.cycleDay}\n                  </span>\n                )}\n              </div>\n            ))}\n          </div>\n\n          {/* Legend */}\n          <div className=\"flex flex-wrap gap-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-4 h-4 bg-gradient-to-br from-red-400 to-pink-400 rounded\"></div>\n              <span className=\"text-xs text-gray-600 dark:text-gray-400\">Period</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-4 h-4 bg-gradient-to-br from-red-200 to-pink-200 border-2 border-dashed border-red-300 rounded\"></div>\n              <span className=\"text-xs text-gray-600 dark:text-gray-400\">Predicted</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-4 h-4 bg-gradient-to-br from-green-400 to-emerald-400 rounded\"></div>\n              <span className=\"text-xs text-gray-600 dark:text-gray-400\">High Fertility</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-4 h-4 bg-gradient-to-br from-yellow-300 to-orange-300 rounded\"></div>\n              <span className=\"text-xs text-gray-600 dark:text-gray-400\">Medium Fertility</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-4 h-4 bg-gradient-to-br from-purple-500 to-pink-500 rounded\"></div>\n              <span className=\"text-xs text-gray-600 dark:text-gray-400\">Today</span>\n            </div>\n          </div>\n\n          {/* Quick Stats */}\n          {analytics && (\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n              <div className=\"text-center\">\n                <p className=\"text-lg font-bold text-purple-600 dark:text-purple-400\">\n                  {analytics.averageCycleLength}\n                </p>\n                <p className=\"text-xs text-gray-600 dark:text-gray-400\">Avg Cycle</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"text-lg font-bold text-pink-600 dark:text-pink-400\">\n                  {analytics.averagePeriodDuration}\n                </p>\n                <p className=\"text-xs text-gray-600 dark:text-gray-400\">Avg Period</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"text-lg font-bold text-green-600 dark:text-green-400\">\n                  {analytics.totalCycles}\n                </p>\n                <p className=\"text-xs text-gray-600 dark:text-gray-400\">Cycles Tracked</p>\n              </div>\n              <div className=\"text-center\">\n                <Badge \n                  variant={analytics.cycleRegularity === 'regular' ? 'default' : 'secondary'}\n                  className=\"text-xs\"\n                >\n                  {analytics.cycleRegularity}\n                </Badge>\n                <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">Regularity</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1475, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/charts/CycleChart.tsx"],"sourcesContent":["'use client';\n\nimport { useMemo } from 'react';\nimport { usePeriodData } from '@/hooks/usePeriodData';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\n\nexport function CycleChart() {\n  const { periods, analytics } = usePeriodData();\n\n  const cycleData = useMemo(() => {\n    if (periods.length < 2) return [];\n\n    const sortedPeriods = periods.sort((a, b) => \n      new Date(a.startDate).getTime() - new Date(b.startDate).getTime()\n    );\n\n    const data = [];\n    for (let i = 1; i < sortedPeriods.length; i++) {\n      const currentStart = new Date(sortedPeriods[i].startDate);\n      const previousStart = new Date(sortedPeriods[i - 1].startDate);\n      const cycleLength = Math.round((currentStart.getTime() - previousStart.getTime()) / (1000 * 60 * 60 * 24));\n      \n      const periodDuration = sortedPeriods[i].endDate \n        ? Math.round((new Date(sortedPeriods[i].endDate!).getTime() - currentStart.getTime()) / (1000 * 60 * 60 * 24)) + 1\n        : analytics?.averagePeriodDuration || 5;\n\n      if (cycleLength > 0 && cycleLength <= 45) {\n        data.push({\n          cycle: i,\n          cycleLength,\n          periodDuration,\n          date: currentStart.toLocaleDateString('en-US', { month: 'short', year: 'numeric' }),\n          fullDate: sortedPeriods[i].startDate,\n        });\n      }\n    }\n\n    return data;\n  }, [periods, analytics]);\n\n  const flowIntensityData = useMemo(() => {\n    const intensityCount = { light: 0, medium: 0, heavy: 0 };\n    \n    periods.forEach(period => {\n      intensityCount[period.flowIntensity]++;\n    });\n\n    return [\n      { name: 'Light', value: intensityCount.light, fill: '#fbbf24' },\n      { name: 'Medium', value: intensityCount.medium, fill: '#f97316' },\n      { name: 'Heavy', value: intensityCount.heavy, fill: '#dc2626' },\n    ];\n  }, [periods]);\n\n  if (periods.length < 2) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Cycle Analytics</CardTitle>\n          <CardDescription>\n            Track at least 2 periods to see your cycle patterns\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center h-64 text-gray-500 dark:text-gray-400\">\n            <div className=\"text-center space-y-2\">\n              <div className=\"w-16 h-16 mx-auto bg-gray-100 dark:bg-gray-800 rounded-full flex items-center justify-center\">\n                📊\n              </div>\n              <p className=\"text-sm\">Not enough data yet</p>\n              <p className=\"text-xs\">Start tracking your periods to see analytics</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Cycle Length Trend */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Cycle Length Trend</CardTitle>\n          <CardDescription>\n            Track how your cycle length changes over time\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={cycleData}>\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"stroke-gray-200 dark:stroke-gray-700\" />\n                <XAxis \n                  dataKey=\"date\" \n                  className=\"text-xs fill-gray-600 dark:fill-gray-400\"\n                />\n                <YAxis \n                  domain={['dataMin - 2', 'dataMax + 2']}\n                  className=\"text-xs fill-gray-600 dark:fill-gray-400\"\n                />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: 'hsl(var(--background))',\n                    border: '1px solid hsl(var(--border))',\n                    borderRadius: '8px',\n                  }}\n                  formatter={(value: number, name: string) => [\n                    `${value} days`,\n                    name === 'cycleLength' ? 'Cycle Length' : 'Period Duration'\n                  ]}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"cycleLength\"\n                  stroke=\"#8b5cf6\"\n                  strokeWidth={3}\n                  dot={{ fill: '#8b5cf6', strokeWidth: 2, r: 4 }}\n                  activeDot={{ r: 6, stroke: '#8b5cf6', strokeWidth: 2 }}\n                />\n                {analytics && (\n                  <Line\n                    type=\"monotone\"\n                    dataKey={() => analytics.averageCycleLength}\n                    stroke=\"#e11d48\"\n                    strokeDasharray=\"5 5\"\n                    strokeWidth={2}\n                    dot={false}\n                  />\n                )}\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n          {analytics && (\n            <div className=\"flex items-center justify-center mt-4 space-x-6 text-sm\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-3 h-3 bg-purple-500 rounded-full\"></div>\n                <span className=\"text-gray-600 dark:text-gray-400\">Actual Length</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-3 h-0.5 bg-pink-500 border-dashed\"></div>\n                <span className=\"text-gray-600 dark:text-gray-400\">Average ({analytics.averageCycleLength} days)</span>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Period Duration */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Period Duration</CardTitle>\n          <CardDescription>\n            How long your periods typically last\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={cycleData}>\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"stroke-gray-200 dark:stroke-gray-700\" />\n                <XAxis \n                  dataKey=\"date\" \n                  className=\"text-xs fill-gray-600 dark:fill-gray-400\"\n                />\n                <YAxis \n                  domain={[0, 'dataMax + 1']}\n                  className=\"text-xs fill-gray-600 dark:fill-gray-400\"\n                />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: 'hsl(var(--background))',\n                    border: '1px solid hsl(var(--border))',\n                    borderRadius: '8px',\n                  }}\n                  formatter={(value: number) => [`${value} days`, 'Period Duration']}\n                />\n                <Bar\n                  dataKey=\"periodDuration\"\n                  fill=\"#ec4899\"\n                  radius={[4, 4, 0, 0]}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Flow Intensity Distribution */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Flow Intensity Distribution</CardTitle>\n          <CardDescription>\n            Breakdown of your flow intensity patterns\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {flowIntensityData.map((item) => (\n              <div key={item.name} className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm font-medium capitalize\">{item.name} Flow</span>\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {item.value} periods ({Math.round((item.value / periods.length) * 100)}%)\n                  </span>\n                </div>\n                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                  <div\n                    className=\"h-2 rounded-full transition-all duration-300\"\n                    style={{\n                      width: `${(item.value / periods.length) * 100}%`,\n                      backgroundColor: item.fill,\n                    }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2086, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/charts/SymptomChart.tsx"],"sourcesContent":["'use client';\n\nimport { useMemo } from 'react';\nimport { usePeriodData } from '@/hooks/usePeriodData';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\nimport { SymptomType } from '@/types/period';\n\nconst SYMPTOM_COLORS = {\n  cramps: '#ef4444',\n  headache: '#f97316',\n  bloating: '#eab308',\n  breast_tenderness: '#ec4899',\n  back_pain: '#8b5cf6',\n  fatigue: '#6366f1',\n  nausea: '#10b981',\n  acne: '#f59e0b',\n  food_cravings: '#84cc16',\n  mood_swings: '#06b6d4',\n  insomnia: '#8b5cf6',\n  hot_flashes: '#dc2626',\n};\n\nconst SYMPTOM_LABELS = {\n  cramps: 'Cramps',\n  headache: 'Headache',\n  bloating: 'Bloating',\n  breast_tenderness: 'Breast Tenderness',\n  back_pain: 'Back Pain',\n  fatigue: 'Fatigue',\n  nausea: 'Nausea',\n  acne: 'Acne',\n  food_cravings: 'Food Cravings',\n  mood_swings: 'Mood Swings',\n  insomnia: 'Insomnia',\n  hot_flashes: 'Hot Flashes',\n};\n\nexport function SymptomChart() {\n  const { dailyEntries, periods } = usePeriodData();\n\n  const symptomData = useMemo(() => {\n    const symptomCounts: Record<SymptomType, { count: number; totalSeverity: number }> = {\n      cramps: { count: 0, totalSeverity: 0 },\n      headache: { count: 0, totalSeverity: 0 },\n      bloating: { count: 0, totalSeverity: 0 },\n      breast_tenderness: { count: 0, totalSeverity: 0 },\n      back_pain: { count: 0, totalSeverity: 0 },\n      fatigue: { count: 0, totalSeverity: 0 },\n      nausea: { count: 0, totalSeverity: 0 },\n      acne: { count: 0, totalSeverity: 0 },\n      food_cravings: { count: 0, totalSeverity: 0 },\n      mood_swings: { count: 0, totalSeverity: 0 },\n      insomnia: { count: 0, totalSeverity: 0 },\n      hot_flashes: { count: 0, totalSeverity: 0 },\n    };\n\n    // Count symptoms from daily entries\n    dailyEntries.forEach(entry => {\n      entry.symptoms.forEach(symptom => {\n        if (symptomCounts[symptom.type]) {\n          symptomCounts[symptom.type].count++;\n          symptomCounts[symptom.type].totalSeverity += symptom.severity;\n        }\n      });\n    });\n\n    // Count symptoms from period entries\n    periods.forEach(period => {\n      period.symptoms.forEach(symptom => {\n        if (symptomCounts[symptom.type]) {\n          symptomCounts[symptom.type].count++;\n          symptomCounts[symptom.type].totalSeverity += symptom.severity;\n        }\n      });\n    });\n\n    return Object.entries(symptomCounts)\n      .filter(([_, data]) => data.count > 0)\n      .map(([type, data]) => ({\n        name: SYMPTOM_LABELS[type as SymptomType],\n        type: type as SymptomType,\n        count: data.count,\n        averageSeverity: Math.round((data.totalSeverity / data.count) * 10) / 10,\n        fill: SYMPTOM_COLORS[type as SymptomType],\n      }))\n      .sort((a, b) => b.count - a.count);\n  }, [dailyEntries, periods]);\n\n  const moodData = useMemo(() => {\n    const moodCounts: Record<string, number> = {};\n    \n    [...dailyEntries, ...periods].forEach(entry => {\n      if (entry.mood) {\n        moodCounts[entry.mood] = (moodCounts[entry.mood] || 0) + 1;\n      }\n    });\n\n    return Object.entries(moodCounts)\n      .map(([mood, count]) => ({\n        name: mood.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n        value: count,\n        fill: getMoodColor(mood),\n      }))\n      .sort((a, b) => b.value - a.value);\n  }, [dailyEntries, periods]);\n\n  const symptomTrendData = useMemo(() => {\n    if (periods.length < 3) return [];\n\n    const recentPeriods = periods\n      .sort((a, b) => new Date(b.startDate).getTime() - new Date(a.startDate).getTime())\n      .slice(0, 6)\n      .reverse();\n\n    return recentPeriods.map((period, index) => {\n      const symptomCounts: Record<string, number> = {};\n      \n      period.symptoms.forEach(symptom => {\n        const label = SYMPTOM_LABELS[symptom.type];\n        symptomCounts[label] = (symptomCounts[label] || 0) + 1;\n      });\n\n      return {\n        period: `Period ${index + 1}`,\n        date: new Date(period.startDate).toLocaleDateString('en-US', { month: 'short' }),\n        ...symptomCounts,\n      };\n    });\n  }, [periods]);\n\n  if (symptomData.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Symptom Analytics</CardTitle>\n          <CardDescription>\n            Track symptoms to see patterns and insights\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center h-64 text-gray-500 dark:text-gray-400\">\n            <div className=\"text-center space-y-2\">\n              <div className=\"w-16 h-16 mx-auto bg-gray-100 dark:bg-gray-800 rounded-full flex items-center justify-center\">\n                📈\n              </div>\n              <p className=\"text-sm\">No symptoms tracked yet</p>\n              <p className=\"text-xs\">Start logging symptoms to see analytics</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Most Common Symptoms */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Most Common Symptoms</CardTitle>\n          <CardDescription>\n            Frequency of symptoms you've experienced\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"h-64\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={symptomData.slice(0, 8)} layout=\"horizontal\">\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"stroke-gray-200 dark:stroke-gray-700\" />\n                <XAxis \n                  type=\"number\"\n                  className=\"text-xs fill-gray-600 dark:fill-gray-400\"\n                />\n                <YAxis \n                  type=\"category\"\n                  dataKey=\"name\"\n                  width={100}\n                  className=\"text-xs fill-gray-600 dark:fill-gray-400\"\n                />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: 'hsl(var(--background))',\n                    border: '1px solid hsl(var(--border))',\n                    borderRadius: '8px',\n                  }}\n                  formatter={(value: number, name: string) => [\n                    `${value} times`,\n                    'Frequency'\n                  ]}\n                />\n                <Bar\n                  dataKey=\"count\"\n                  radius={[0, 4, 4, 0]}\n                  fill=\"#8b5cf6\"\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Symptom Severity */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Average Symptom Severity</CardTitle>\n          <CardDescription>\n            How severe your symptoms typically are (1-5 scale)\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {symptomData.slice(0, 6).map((symptom) => (\n              <div key={symptom.type} className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm font-medium\">{symptom.name}</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {symptom.averageSeverity}/5\n                    </span>\n                    <div className=\"flex space-x-1\">\n                      {[1, 2, 3, 4, 5].map((level) => (\n                        <div\n                          key={level}\n                          className={`w-3 h-3 rounded-full ${\n                            level <= symptom.averageSeverity\n                              ? 'bg-gradient-to-r from-yellow-400 to-red-500'\n                              : 'bg-gray-200 dark:bg-gray-700'\n                          }`}\n                        />\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                  <div\n                    className=\"h-2 rounded-full transition-all duration-300\"\n                    style={{\n                      width: `${(symptom.averageSeverity / 5) * 100}%`,\n                      backgroundColor: symptom.fill,\n                    }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Mood Distribution */}\n      {moodData.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Mood Patterns</CardTitle>\n            <CardDescription>\n              Distribution of your recorded moods\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-64\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={moodData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={80}\n                    dataKey=\"value\"\n                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                  >\n                    {moodData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.fill} />\n                    ))}\n                  </Pie>\n                  <Tooltip\n                    contentStyle={{\n                      backgroundColor: 'hsl(var(--background))',\n                      border: '1px solid hsl(var(--border))',\n                      borderRadius: '8px',\n                    }}\n                  />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Symptom Trends */}\n      {symptomTrendData.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Symptom Trends</CardTitle>\n            <CardDescription>\n              How your symptoms change across recent periods\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-64\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={symptomTrendData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" className=\"stroke-gray-200 dark:stroke-gray-700\" />\n                  <XAxis \n                    dataKey=\"date\"\n                    className=\"text-xs fill-gray-600 dark:fill-gray-400\"\n                  />\n                  <YAxis \n                    className=\"text-xs fill-gray-600 dark:fill-gray-400\"\n                  />\n                  <Tooltip\n                    contentStyle={{\n                      backgroundColor: 'hsl(var(--background))',\n                      border: '1px solid hsl(var(--border))',\n                      borderRadius: '8px',\n                    }}\n                  />\n                  {Object.keys(SYMPTOM_LABELS).slice(0, 5).map((symptomType, index) => (\n                    <Bar\n                      key={symptomType}\n                      dataKey={SYMPTOM_LABELS[symptomType as SymptomType]}\n                      stackId=\"symptoms\"\n                      fill={SYMPTOM_COLORS[symptomType as SymptomType]}\n                    />\n                  ))}\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n\nfunction getMoodColor(mood: string): string {\n  const moodColors: Record<string, string> = {\n    very_happy: '#10b981',\n    happy: '#34d399',\n    neutral: '#6b7280',\n    sad: '#f59e0b',\n    very_sad: '#ef4444',\n    anxious: '#8b5cf6',\n    irritated: '#f97316',\n    energetic: '#06b6d4',\n    tired: '#64748b',\n  };\n  \n  return moodColors[mood] || '#6b7280';\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2848, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 3045, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 3077, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 3111, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 3142, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3391, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/period/QuickLogDialog.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { usePeriodData } from '@/hooks/usePeriodData';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { toast } from 'sonner';\nimport { MoodRating, SymptomType } from '@/types/period';\n\ninterface QuickLogDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\nconst MOOD_OPTIONS: { value: MoodRating; label: string; emoji: string }[] = [\n  { value: 'very_happy', label: 'Very Happy', emoji: '😄' },\n  { value: 'happy', label: 'Happy', emoji: '😊' },\n  { value: 'neutral', label: 'Neutral', emoji: '😐' },\n  { value: 'sad', label: 'Sad', emoji: '😢' },\n  { value: 'very_sad', label: 'Very Sad', emoji: '😭' },\n  { value: 'anxious', label: 'Anxious', emoji: '😰' },\n  { value: 'irritated', label: 'Irritated', emoji: '😤' },\n  { value: 'energetic', label: 'Energetic', emoji: '⚡' },\n  { value: 'tired', label: 'Tired', emoji: '😴' },\n];\n\nconst SYMPTOM_OPTIONS: { value: SymptomType; label: string }[] = [\n  { value: 'cramps', label: 'Cramps' },\n  { value: 'headache', label: 'Headache' },\n  { value: 'bloating', label: 'Bloating' },\n  { value: 'breast_tenderness', label: 'Breast Tenderness' },\n  { value: 'back_pain', label: 'Back Pain' },\n  { value: 'fatigue', label: 'Fatigue' },\n  { value: 'nausea', label: 'Nausea' },\n  { value: 'acne', label: 'Acne' },\n  { value: 'food_cravings', label: 'Food Cravings' },\n  { value: 'mood_swings', label: 'Mood Swings' },\n  { value: 'insomnia', label: 'Insomnia' },\n  { value: 'hot_flashes', label: 'Hot Flashes' },\n];\n\nexport function QuickLogDialog({ open, onOpenChange }: QuickLogDialogProps) {\n  const { addPeriod, saveDailyEntry, getDailyEntry } = usePeriodData();\n  \n  const [logType, setLogType] = useState<'period' | 'daily'>('daily');\n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\n  \n  // Period form state\n  const [periodStartDate, setPeriodStartDate] = useState(new Date().toISOString().split('T')[0]);\n  const [periodEndDate, setPeriodEndDate] = useState('');\n  const [flowIntensity, setFlowIntensity] = useState<'light' | 'medium' | 'heavy'>('medium');\n  const [periodNotes, setPeriodNotes] = useState('');\n  \n  // Daily form state\n  const [isPeriod, setIsPeriod] = useState(false);\n  const [dailyFlowIntensity, setDailyFlowIntensity] = useState<'light' | 'medium' | 'heavy'>('medium');\n  const [mood, setMood] = useState<MoodRating | ''>('');\n  const [selectedSymptoms, setSelectedSymptoms] = useState<{ type: SymptomType; severity: number }[]>([]);\n  const [dailyNotes, setDailyNotes] = useState('');\n  const [temperature, setTemperature] = useState('');\n  const [cervicalMucus, setCervicalMucus] = useState<'dry' | 'sticky' | 'creamy' | 'egg_white' | ''>('');\n\n  const handleAddSymptom = (symptomType: SymptomType) => {\n    if (!selectedSymptoms.find(s => s.type === symptomType)) {\n      setSelectedSymptoms([...selectedSymptoms, { type: symptomType, severity: 3 }]);\n    }\n  };\n\n  const handleRemoveSymptom = (symptomType: SymptomType) => {\n    setSelectedSymptoms(selectedSymptoms.filter(s => s.type !== symptomType));\n  };\n\n  const handleSymptomSeverityChange = (symptomType: SymptomType, severity: number) => {\n    setSelectedSymptoms(selectedSymptoms.map(s => \n      s.type === symptomType ? { ...s, severity } : s\n    ));\n  };\n\n  const handleSubmitPeriod = () => {\n    if (!periodStartDate) {\n      toast.error('Please select a start date');\n      return;\n    }\n\n    const symptoms = selectedSymptoms.map(s => ({\n      id: crypto.randomUUID(),\n      type: s.type,\n      severity: s.severity as 1 | 2 | 3 | 4 | 5,\n      timestamp: new Date().toISOString(),\n    }));\n\n    addPeriod({\n      startDate: periodStartDate,\n      endDate: periodEndDate || undefined,\n      flowIntensity,\n      symptoms,\n      notes: periodNotes,\n      mood: mood as MoodRating || 'neutral',\n    });\n\n    toast.success('Period logged successfully!');\n    resetForm();\n    onOpenChange(false);\n  };\n\n  const handleSubmitDaily = () => {\n    const symptoms = selectedSymptoms.map(s => ({\n      id: crypto.randomUUID(),\n      type: s.type,\n      severity: s.severity as 1 | 2 | 3 | 4 | 5,\n      timestamp: new Date().toISOString(),\n    }));\n\n    const entry = {\n      date,\n      isPeriod,\n      flowIntensity: isPeriod ? dailyFlowIntensity : undefined,\n      symptoms,\n      mood: mood as MoodRating || undefined,\n      notes: dailyNotes || undefined,\n      temperature: temperature ? parseFloat(temperature) : undefined,\n      cervicalMucus: cervicalMucus || undefined,\n    };\n\n    saveDailyEntry(entry);\n    toast.success('Daily entry saved successfully!');\n    resetForm();\n    onOpenChange(false);\n  };\n\n  const resetForm = () => {\n    setDate(new Date().toISOString().split('T')[0]);\n    setPeriodStartDate(new Date().toISOString().split('T')[0]);\n    setPeriodEndDate('');\n    setFlowIntensity('medium');\n    setPeriodNotes('');\n    setIsPeriod(false);\n    setDailyFlowIntensity('medium');\n    setMood('');\n    setSelectedSymptoms([]);\n    setDailyNotes('');\n    setTemperature('');\n    setCervicalMucus('');\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Quick Log</DialogTitle>\n          <DialogDescription>\n            Log your period or daily symptoms and mood\n          </DialogDescription>\n        </DialogHeader>\n\n        <Tabs value={logType} onValueChange={(value) => setLogType(value as 'period' | 'daily')}>\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"daily\">Daily Entry</TabsTrigger>\n            <TabsTrigger value=\"period\">New Period</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"daily\" className=\"space-y-6\">\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"date\">Date</Label>\n                <Input\n                  id=\"date\"\n                  type=\"date\"\n                  value={date}\n                  onChange={(e) => setDate(e.target.value)}\n                />\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"isPeriod\"\n                  checked={isPeriod}\n                  onChange={(e) => setIsPeriod(e.target.checked)}\n                  className=\"rounded\"\n                />\n                <Label htmlFor=\"isPeriod\">I'm on my period today</Label>\n              </div>\n\n              {isPeriod && (\n                <div>\n                  <Label>Flow Intensity</Label>\n                  <Select value={dailyFlowIntensity} onValueChange={(value) => setDailyFlowIntensity(value as 'light' | 'medium' | 'heavy')}>\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"light\">Light</SelectItem>\n                      <SelectItem value=\"medium\">Medium</SelectItem>\n                      <SelectItem value=\"heavy\">Heavy</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              )}\n\n              <div>\n                <Label>Mood</Label>\n                <div className=\"grid grid-cols-3 gap-2 mt-2\">\n                  {MOOD_OPTIONS.map((moodOption) => (\n                    <Button\n                      key={moodOption.value}\n                      variant={mood === moodOption.value ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      onClick={() => setMood(mood === moodOption.value ? '' : moodOption.value)}\n                      className=\"justify-start\"\n                    >\n                      <span className=\"mr-2\">{moodOption.emoji}</span>\n                      {moodOption.label}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <Label>Symptoms</Label>\n                <div className=\"grid grid-cols-2 gap-2 mt-2\">\n                  {SYMPTOM_OPTIONS.map((symptom) => (\n                    <Button\n                      key={symptom.value}\n                      variant={selectedSymptoms.find(s => s.type === symptom.value) ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      onClick={() => {\n                        if (selectedSymptoms.find(s => s.type === symptom.value)) {\n                          handleRemoveSymptom(symptom.value);\n                        } else {\n                          handleAddSymptom(symptom.value);\n                        }\n                      }}\n                    >\n                      {symptom.label}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n\n              {selectedSymptoms.length > 0 && (\n                <div>\n                  <Label>Symptom Severity</Label>\n                  <div className=\"space-y-3 mt-2\">\n                    {selectedSymptoms.map((symptom) => (\n                      <Card key={symptom.type}>\n                        <CardContent className=\"p-4\">\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-sm font-medium\">\n                              {SYMPTOM_OPTIONS.find(s => s.value === symptom.type)?.label}\n                            </span>\n                            <div className=\"flex items-center space-x-2\">\n                              {[1, 2, 3, 4, 5].map((level) => (\n                                <Button\n                                  key={level}\n                                  variant={symptom.severity >= level ? \"default\" : \"outline\"}\n                                  size=\"sm\"\n                                  className=\"w-8 h-8 p-0\"\n                                  onClick={() => handleSymptomSeverityChange(symptom.type, level)}\n                                >\n                                  {level}\n                                </Button>\n                              ))}\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"temperature\">Temperature (°F)</Label>\n                  <Input\n                    id=\"temperature\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    placeholder=\"98.6\"\n                    value={temperature}\n                    onChange={(e) => setTemperature(e.target.value)}\n                  />\n                </div>\n                <div>\n                  <Label>Cervical Mucus</Label>\n                  <Select value={cervicalMucus} onValueChange={(value) => setCervicalMucus(value as any)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select...\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"dry\">Dry</SelectItem>\n                      <SelectItem value=\"sticky\">Sticky</SelectItem>\n                      <SelectItem value=\"creamy\">Creamy</SelectItem>\n                      <SelectItem value=\"egg_white\">Egg White</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"dailyNotes\">Notes</Label>\n                <Textarea\n                  id=\"dailyNotes\"\n                  placeholder=\"Any additional notes...\"\n                  value={dailyNotes}\n                  onChange={(e) => setDailyNotes(e.target.value)}\n                />\n              </div>\n\n              <Button onClick={handleSubmitDaily} className=\"w-full\">\n                Save Daily Entry\n              </Button>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"period\" className=\"space-y-6\">\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"startDate\">Start Date</Label>\n                  <Input\n                    id=\"startDate\"\n                    type=\"date\"\n                    value={periodStartDate}\n                    onChange={(e) => setPeriodStartDate(e.target.value)}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"endDate\">End Date (Optional)</Label>\n                  <Input\n                    id=\"endDate\"\n                    type=\"date\"\n                    value={periodEndDate}\n                    onChange={(e) => setPeriodEndDate(e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label>Flow Intensity</Label>\n                <Select value={flowIntensity} onValueChange={(value) => setFlowIntensity(value as 'light' | 'medium' | 'heavy')}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"light\">Light</SelectItem>\n                    <SelectItem value=\"medium\">Medium</SelectItem>\n                    <SelectItem value=\"heavy\">Heavy</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <Label>Mood</Label>\n                <div className=\"grid grid-cols-3 gap-2 mt-2\">\n                  {MOOD_OPTIONS.map((moodOption) => (\n                    <Button\n                      key={moodOption.value}\n                      variant={mood === moodOption.value ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      onClick={() => setMood(mood === moodOption.value ? '' : moodOption.value)}\n                      className=\"justify-start\"\n                    >\n                      <span className=\"mr-2\">{moodOption.emoji}</span>\n                      {moodOption.label}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <Label>Symptoms</Label>\n                <div className=\"grid grid-cols-2 gap-2 mt-2\">\n                  {SYMPTOM_OPTIONS.map((symptom) => (\n                    <Button\n                      key={symptom.value}\n                      variant={selectedSymptoms.find(s => s.type === symptom.value) ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      onClick={() => {\n                        if (selectedSymptoms.find(s => s.type === symptom.value)) {\n                          handleRemoveSymptom(symptom.value);\n                        } else {\n                          handleAddSymptom(symptom.value);\n                        }\n                      }}\n                    >\n                      {symptom.label}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n\n              {selectedSymptoms.length > 0 && (\n                <div>\n                  <Label>Symptom Severity</Label>\n                  <div className=\"space-y-3 mt-2\">\n                    {selectedSymptoms.map((symptom) => (\n                      <Card key={symptom.type}>\n                        <CardContent className=\"p-4\">\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-sm font-medium\">\n                              {SYMPTOM_OPTIONS.find(s => s.value === symptom.type)?.label}\n                            </span>\n                            <div className=\"flex items-center space-x-2\">\n                              {[1, 2, 3, 4, 5].map((level) => (\n                                <Button\n                                  key={level}\n                                  variant={symptom.severity >= level ? \"default\" : \"outline\"}\n                                  size=\"sm\"\n                                  className=\"w-8 h-8 p-0\"\n                                  onClick={() => handleSymptomSeverityChange(symptom.type, level)}\n                                >\n                                  {level}\n                                </Button>\n                              ))}\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              <div>\n                <Label htmlFor=\"periodNotes\">Notes</Label>\n                <Textarea\n                  id=\"periodNotes\"\n                  placeholder=\"Any additional notes about this period...\"\n                  value={periodNotes}\n                  onChange={(e) => setPeriodNotes(e.target.value)}\n                />\n              </div>\n\n              <Button onClick={handleSubmitPeriod} className=\"w-full\">\n                Log Period\n              </Button>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4490, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Slider({\n  className,\n  defaultValue,\n  value,\n  min = 0,\n  max = 100,\n  ...props\n}: React.ComponentProps<typeof SliderPrimitive.Root>) {\n  const _values = React.useMemo(\n    () =>\n      Array.isArray(value)\n        ? value\n        : Array.isArray(defaultValue)\n          ? defaultValue\n          : [min, max],\n    [value, defaultValue, min, max]\n  )\n\n  return (\n    <SliderPrimitive.Root\n      data-slot=\"slider\"\n      defaultValue={defaultValue}\n      value={value}\n      min={min}\n      max={max}\n      className={cn(\n        \"relative flex w-full touch-none items-center select-none data-[disabled]:opacity-50 data-[orientation=vertical]:h-full data-[orientation=vertical]:min-h-44 data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col\",\n        className\n      )}\n      {...props}\n    >\n      <SliderPrimitive.Track\n        data-slot=\"slider-track\"\n        className={cn(\n          \"bg-muted relative grow overflow-hidden rounded-full data-[orientation=horizontal]:h-1.5 data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-1.5\"\n        )}\n      >\n        <SliderPrimitive.Range\n          data-slot=\"slider-range\"\n          className={cn(\n            \"bg-primary absolute data-[orientation=horizontal]:h-full data-[orientation=vertical]:w-full\"\n          )}\n        />\n      </SliderPrimitive.Track>\n      {Array.from({ length: _values.length }, (_, index) => (\n        <SliderPrimitive.Thumb\n          data-slot=\"slider-thumb\"\n          key={index}\n          className=\"border-primary bg-background ring-ring/50 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] hover:ring-4 focus-visible:ring-4 focus-visible:outline-hidden disabled:pointer-events-none disabled:opacity-50\"\n        />\n      ))}\n    </SliderPrimitive.Root>\n  )\n}\n\nexport { Slider }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;;;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,YAAY,EACZ,KAAK,EACL,MAAM,CAAC,EACP,MAAM,GAAG,EACT,GAAG,OAC+C;;IAClD,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAa,AAAD;mCAC1B,IACE,MAAM,OAAO,CAAC,SACV,QACA,MAAM,OAAO,CAAC,gBACZ,eACA;gBAAC;gBAAK;aAAI;kCAClB;QAAC;QAAO;QAAc;QAAK;KAAI;IAGjC,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,cAAc;QACd,OAAO;QACP,KAAK;QACL,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uOACA;QAED,GAAG,KAAK;;0BAET,6LAAC,qKAAA,CAAA,QAAqB;gBACpB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;0BAGF,cAAA,6LAAC,qKAAA,CAAA,QAAqB;oBACpB,aAAU;oBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;YAIL,MAAM,IAAI,CAAC;gBAAE,QAAQ,QAAQ,MAAM;YAAC,GAAG,CAAC,GAAG,sBAC1C,6LAAC,qKAAA,CAAA,QAAqB;oBACpB,aAAU;oBAEV,WAAU;mBADL;;;;;;;;;;;AAMf;GArDS;KAAA","debugId":null}},
    {"offset": {"line": 4572, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/period/SymptomTracker.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { usePeriodData } from '@/hooks/usePeriodData';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Slider } from '@/components/ui/slider';\nimport { toast } from 'sonner';\nimport { MoodRating, SymptomType } from '@/types/period';\n\ninterface SymptomTrackerProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\nconst MOOD_OPTIONS: { value: MoodRating; label: string; emoji: string; color: string }[] = [\n  { value: 'very_happy', label: 'Very Happy', emoji: '😄', color: 'bg-green-500' },\n  { value: 'happy', label: 'Happy', emoji: '😊', color: 'bg-green-400' },\n  { value: 'neutral', label: 'Neutral', emoji: '😐', color: 'bg-gray-400' },\n  { value: 'sad', label: 'Sad', emoji: '😢', color: 'bg-yellow-500' },\n  { value: 'very_sad', label: 'Very Sad', emoji: '😭', color: 'bg-red-500' },\n  { value: 'anxious', label: 'Anxious', emoji: '😰', color: 'bg-purple-500' },\n  { value: 'irritated', label: 'Irritated', emoji: '😤', color: 'bg-orange-500' },\n  { value: 'energetic', label: 'Energetic', emoji: '⚡', color: 'bg-cyan-500' },\n  { value: 'tired', label: 'Tired', emoji: '😴', color: 'bg-slate-500' },\n];\n\nconst SYMPTOM_CATEGORIES = {\n  physical: {\n    title: 'Physical Symptoms',\n    symptoms: [\n      { value: 'cramps' as SymptomType, label: 'Cramps', description: 'Abdominal or pelvic pain' },\n      { value: 'headache' as SymptomType, label: 'Headache', description: 'Head pain or tension' },\n      { value: 'bloating' as SymptomType, label: 'Bloating', description: 'Abdominal swelling or fullness' },\n      { value: 'breast_tenderness' as SymptomType, label: 'Breast Tenderness', description: 'Breast pain or sensitivity' },\n      { value: 'back_pain' as SymptomType, label: 'Back Pain', description: 'Lower back discomfort' },\n      { value: 'fatigue' as SymptomType, label: 'Fatigue', description: 'Tiredness or low energy' },\n      { value: 'nausea' as SymptomType, label: 'Nausea', description: 'Feeling sick or queasy' },\n      { value: 'hot_flashes' as SymptomType, label: 'Hot Flashes', description: 'Sudden feeling of heat' },\n    ]\n  },\n  emotional: {\n    title: 'Emotional & Mental',\n    symptoms: [\n      { value: 'mood_swings' as SymptomType, label: 'Mood Swings', description: 'Rapid changes in mood' },\n      { value: 'insomnia' as SymptomType, label: 'Insomnia', description: 'Difficulty sleeping' },\n    ]\n  },\n  other: {\n    title: 'Other Symptoms',\n    symptoms: [\n      { value: 'acne' as SymptomType, label: 'Acne', description: 'Skin breakouts' },\n      { value: 'food_cravings' as SymptomType, label: 'Food Cravings', description: 'Unusual food desires' },\n    ]\n  }\n};\n\nexport function SymptomTracker({ open, onOpenChange }: SymptomTrackerProps) {\n  const { saveDailyEntry, getDailyEntry } = usePeriodData();\n  \n  const [date, setDate] = useState(new Date().toISOString().split('T')[0]);\n  const [mood, setMood] = useState<MoodRating | ''>('');\n  const [selectedSymptoms, setSelectedSymptoms] = useState<{ type: SymptomType; severity: number; notes?: string }[]>([]);\n  const [notes, setNotes] = useState('');\n\n  // Load existing data when date changes\n  useEffect(() => {\n    const existingEntry = getDailyEntry(date);\n    if (existingEntry) {\n      setMood(existingEntry.mood || '');\n      setSelectedSymptoms(existingEntry.symptoms.map(s => ({\n        type: s.type,\n        severity: s.severity,\n        notes: s.notes,\n      })));\n      setNotes(existingEntry.notes || '');\n    } else {\n      setMood('');\n      setSelectedSymptoms([]);\n      setNotes('');\n    }\n  }, [date, getDailyEntry]);\n\n  const handleAddSymptom = (symptomType: SymptomType) => {\n    if (!selectedSymptoms.find(s => s.type === symptomType)) {\n      setSelectedSymptoms([...selectedSymptoms, { type: symptomType, severity: 3 }]);\n    }\n  };\n\n  const handleRemoveSymptom = (symptomType: SymptomType) => {\n    setSelectedSymptoms(selectedSymptoms.filter(s => s.type !== symptomType));\n  };\n\n  const handleSymptomSeverityChange = (symptomType: SymptomType, severity: number) => {\n    setSelectedSymptoms(selectedSymptoms.map(s => \n      s.type === symptomType ? { ...s, severity } : s\n    ));\n  };\n\n  const handleSymptomNotesChange = (symptomType: SymptomType, notes: string) => {\n    setSelectedSymptoms(selectedSymptoms.map(s => \n      s.type === symptomType ? { ...s, notes } : s\n    ));\n  };\n\n  const handleSubmit = () => {\n    const symptoms = selectedSymptoms.map(s => ({\n      id: crypto.randomUUID(),\n      type: s.type,\n      severity: s.severity as 1 | 2 | 3 | 4 | 5,\n      timestamp: new Date().toISOString(),\n      notes: s.notes,\n    }));\n\n    const existingEntry = getDailyEntry(date);\n    \n    const entry = {\n      date,\n      isPeriod: existingEntry?.isPeriod || false,\n      flowIntensity: existingEntry?.flowIntensity,\n      symptoms,\n      mood: mood as MoodRating || undefined,\n      notes: notes || undefined,\n      temperature: existingEntry?.temperature,\n      cervicalMucus: existingEntry?.cervicalMucus,\n    };\n\n    saveDailyEntry(entry);\n    toast.success('Symptoms tracked successfully!');\n    onOpenChange(false);\n  };\n\n  const getSeverityLabel = (severity: number) => {\n    const labels = ['', 'Mild', 'Light', 'Moderate', 'Severe', 'Very Severe'];\n    return labels[severity] || 'Moderate';\n  };\n\n  const getSeverityColor = (severity: number) => {\n    const colors = ['', 'bg-green-200', 'bg-yellow-200', 'bg-orange-200', 'bg-red-200', 'bg-red-400'];\n    return colors[severity] || 'bg-orange-200';\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Track Symptoms & Mood</DialogTitle>\n          <DialogDescription>\n            Record your daily symptoms and mood to identify patterns\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Date Selection */}\n          <div>\n            <Label htmlFor=\"date\" className=\"text-base font-medium\">Date</Label>\n            <input\n              id=\"date\"\n              type=\"date\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-purple-500 focus:border-purple-500\"\n            />\n          </div>\n\n          {/* Mood Selection */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">How are you feeling today?</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-3 gap-3\">\n                {MOOD_OPTIONS.map((moodOption) => (\n                  <Button\n                    key={moodOption.value}\n                    variant={mood === moodOption.value ? \"default\" : \"outline\"}\n                    size=\"sm\"\n                    onClick={() => setMood(mood === moodOption.value ? '' : moodOption.value)}\n                    className={`justify-start h-auto p-3 ${\n                      mood === moodOption.value ? moodOption.color : ''\n                    }`}\n                  >\n                    <div className=\"flex flex-col items-center space-y-1\">\n                      <span className=\"text-lg\">{moodOption.emoji}</span>\n                      <span className=\"text-xs\">{moodOption.label}</span>\n                    </div>\n                  </Button>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Symptom Categories */}\n          {Object.entries(SYMPTOM_CATEGORIES).map(([categoryKey, category]) => (\n            <Card key={categoryKey}>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">{category.title}</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  {category.symptoms.map((symptom) => {\n                    const isSelected = selectedSymptoms.find(s => s.type === symptom.value);\n                    return (\n                      <Button\n                        key={symptom.value}\n                        variant={isSelected ? \"default\" : \"outline\"}\n                        size=\"sm\"\n                        onClick={() => {\n                          if (isSelected) {\n                            handleRemoveSymptom(symptom.value);\n                          } else {\n                            handleAddSymptom(symptom.value);\n                          }\n                        }}\n                        className=\"justify-start h-auto p-3\"\n                      >\n                        <div className=\"text-left\">\n                          <div className=\"font-medium\">{symptom.label}</div>\n                          <div className=\"text-xs opacity-70\">{symptom.description}</div>\n                        </div>\n                      </Button>\n                    );\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n\n          {/* Symptom Severity */}\n          {selectedSymptoms.length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Symptom Severity</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {selectedSymptoms.map((symptom) => {\n                    const symptomInfo = Object.values(SYMPTOM_CATEGORIES)\n                      .flatMap(cat => cat.symptoms)\n                      .find(s => s.value === symptom.type);\n                    \n                    return (\n                      <div key={symptom.type} className=\"space-y-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <h4 className=\"font-medium\">{symptomInfo?.label}</h4>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                              {symptomInfo?.description}\n                            </p>\n                          </div>\n                          <Badge \n                            className={`${getSeverityColor(symptom.severity)} text-gray-800`}\n                          >\n                            {getSeverityLabel(symptom.severity)}\n                          </Badge>\n                        </div>\n                        \n                        <div className=\"space-y-2\">\n                          <div className=\"flex items-center space-x-4\">\n                            <span className=\"text-sm text-gray-500 w-12\">Mild</span>\n                            <Slider\n                              value={[symptom.severity]}\n                              onValueChange={(value) => handleSymptomSeverityChange(symptom.type, value[0])}\n                              max={5}\n                              min={1}\n                              step={1}\n                              className=\"flex-1\"\n                            />\n                            <span className=\"text-sm text-gray-500 w-16\">Severe</span>\n                          </div>\n                          \n                          <div className=\"flex justify-between text-xs text-gray-400\">\n                            {[1, 2, 3, 4, 5].map(level => (\n                              <span key={level}>{level}</span>\n                            ))}\n                          </div>\n                        </div>\n\n                        <Textarea\n                          placeholder={`Additional notes about ${symptomInfo?.label.toLowerCase()}...`}\n                          value={symptom.notes || ''}\n                          onChange={(e) => handleSymptomNotesChange(symptom.type, e.target.value)}\n                          className=\"text-sm\"\n                          rows={2}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* General Notes */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Additional Notes</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Textarea\n                placeholder=\"Any other observations, thoughts, or notes about today...\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                rows={3}\n              />\n            </CardContent>\n          </Card>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end space-x-3\">\n            <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} className=\"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600\">\n              Save Symptoms\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5309, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { usePeriodData } from '@/hooks/usePeriodData';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { PeriodCalendar } from '@/components/period/PeriodCalendar';\nimport { CycleChart } from '@/components/charts/CycleChart';\nimport { SymptomChart } from '@/components/charts/SymptomChart';\nimport { QuickLogDialog } from '@/components/period/QuickLogDialog';\nimport { SymptomTracker } from '@/components/period/SymptomTracker';\n\nexport default function Dashboard() {\n  const {\n    periods,\n    analytics,\n    isLoading,\n    getCurrentCycleDay,\n    getFertilityStatus,\n    getNextPeriodPredictions,\n    isPeriodDate,\n    isPredictedPeriodDate,\n  } = usePeriodData();\n\n  const [showQuickLog, setShowQuickLog] = useState(false);\n  const [showSymptomTracker, setShowSymptomTracker] = useState(false);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"w-8 h-8 border-4 border-purple-200 border-t-purple-600 rounded-full animate-spin mx-auto\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading your cycle data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const today = new Date().toISOString().split('T')[0];\n  const currentCycleDay = getCurrentCycleDay();\n  const fertilityStatus = getFertilityStatus(today);\n  const nextPredictions = getNextPeriodPredictions(3);\n  const isCurrentlyOnPeriod = isPeriodDate(today);\n  const isPredictedPeriod = isPredictedPeriodDate(today);\n\n  const getDaysUntilNextPeriod = () => {\n    if (!analytics) return 0;\n    const nextPeriod = new Date(analytics.nextPredictedPeriod);\n    const today = new Date();\n    const diffTime = nextPeriod.getTime() - today.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return Math.max(0, diffDays);\n  };\n\n  const daysUntilNextPeriod = getDaysUntilNextPeriod();\n  const cycleProgress = analytics ? ((currentCycleDay - 1) / analytics.averageCycleLength) * 100 : 0;\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Header */}\n      <header className=\"bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm border-b border-gray-200 dark:border-gray-800 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-bold text-sm\">L</span>\n              </div>\n              <h1 className=\"text-xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent\">\n                Luna\n              </h1>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                onClick={() => setShowQuickLog(true)}\n                className=\"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600\"\n              >\n                Quick Log\n              </Button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Welcome Section */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n            Good {new Date().getHours() < 12 ? 'morning' : new Date().getHours() < 18 ? 'afternoon' : 'evening'}! 👋\n          </h2>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            Here's your cycle overview for today\n          </p>\n        </div>\n\n        {/* Status Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          {/* Current Status */}\n          <Card className=\"bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 border-purple-200 dark:border-purple-800\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-sm font-medium text-purple-700 dark:text-purple-300\">\n                Current Status\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                <Badge \n                  variant={isCurrentlyOnPeriod ? \"destructive\" : isPredictedPeriod ? \"secondary\" : \"outline\"}\n                  className=\"text-xs\"\n                >\n                  {isCurrentlyOnPeriod ? \"On Period\" : isPredictedPeriod ? \"Predicted Period\" : \"Regular Cycle\"}\n                </Badge>\n                <p className=\"text-2xl font-bold text-purple-900 dark:text-purple-100\">\n                  Day {currentCycleDay}\n                </p>\n                <p className=\"text-xs text-purple-600 dark:text-purple-400\">\n                  of your cycle\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Next Period */}\n          <Card className=\"bg-gradient-to-br from-pink-50 to-rose-50 dark:from-pink-900/20 dark:to-rose-900/20 border-pink-200 dark:border-pink-800\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-sm font-medium text-pink-700 dark:text-pink-300\">\n                Next Period\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                <p className=\"text-2xl font-bold text-pink-900 dark:text-pink-100\">\n                  {daysUntilNextPeriod === 0 ? \"Today\" : `${daysUntilNextPeriod} days`}\n                </p>\n                <p className=\"text-xs text-pink-600 dark:text-pink-400\">\n                  {analytics?.nextPredictedPeriod ? \n                    new Date(analytics.nextPredictedPeriod).toLocaleDateString('en-US', { \n                      month: 'short', \n                      day: 'numeric' \n                    }) : \n                    'Not enough data'\n                  }\n                </p>\n                <Progress \n                  value={cycleProgress} \n                  className=\"h-2 bg-pink-100 dark:bg-pink-900/30\"\n                />\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Fertility Status */}\n          <Card className=\"bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 border-green-200 dark:border-green-800\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-sm font-medium text-green-700 dark:text-green-300\">\n                Fertility\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                <Badge \n                  variant={fertilityStatus.status === 'high' ? \"default\" : fertilityStatus.status === 'medium' ? \"secondary\" : \"outline\"}\n                  className={`text-xs ${\n                    fertilityStatus.status === 'high' ? 'bg-green-500 hover:bg-green-600' : \n                    fertilityStatus.status === 'medium' ? 'bg-yellow-500 hover:bg-yellow-600' : \n                    'bg-gray-500 hover:bg-gray-600'\n                  }`}\n                >\n                  {fertilityStatus.status.charAt(0).toUpperCase() + fertilityStatus.status.slice(1)}\n                </Badge>\n                <p className=\"text-2xl font-bold text-green-900 dark:text-green-100\">\n                  {Math.round(fertilityStatus.probability * 100)}%\n                </p>\n                <p className=\"text-xs text-green-600 dark:text-green-400 capitalize\">\n                  {fertilityStatus.phase} phase\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Cycle Stats */}\n          <Card className=\"bg-gradient-to-br from-indigo-50 to-blue-50 dark:from-indigo-900/20 dark:to-blue-900/20 border-indigo-200 dark:border-indigo-800\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-sm font-medium text-indigo-700 dark:text-indigo-300\">\n                Cycle Stats\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-xs text-indigo-600 dark:text-indigo-400\">Avg Length</span>\n                  <span className=\"text-sm font-semibold text-indigo-900 dark:text-indigo-100\">\n                    {analytics?.averageCycleLength || 28} days\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-xs text-indigo-600 dark:text-indigo-400\">Period Length</span>\n                  <span className=\"text-sm font-semibold text-indigo-900 dark:text-indigo-100\">\n                    {analytics?.averagePeriodDuration || 5} days\n                  </span>\n                </div>\n                <Badge \n                  variant=\"outline\" \n                  className=\"text-xs border-indigo-200 dark:border-indigo-800 text-indigo-700 dark:text-indigo-300\"\n                >\n                  {analytics?.cycleRegularity || 'Unknown'}\n                </Badge>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main Content Tabs */}\n        <Tabs defaultValue=\"calendar\" className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-4 lg:w-[400px]\">\n            <TabsTrigger value=\"calendar\">Calendar</TabsTrigger>\n            <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n            <TabsTrigger value=\"symptoms\">Symptoms</TabsTrigger>\n            <TabsTrigger value=\"insights\">Insights</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"calendar\" className=\"space-y-6\">\n            <PeriodCalendar />\n          </TabsContent>\n\n          <TabsContent value=\"analytics\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <CycleChart />\n              <Card>\n                <CardHeader>\n                  <CardTitle>Upcoming Predictions</CardTitle>\n                  <CardDescription>\n                    Your next predicted periods based on cycle history\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {nextPredictions.map((date, index) => (\n                      <div key={date} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                        <div>\n                          <p className=\"font-medium\">Period #{index + 1}</p>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                            {new Date(date).toLocaleDateString('en-US', { \n                              weekday: 'long',\n                              month: 'long', \n                              day: 'numeric',\n                              year: 'numeric'\n                            })}\n                          </p>\n                        </div>\n                        <Badge variant=\"outline\">\n                          {Math.round((new Date(date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24))} days\n                        </Badge>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"symptoms\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Track Symptoms</CardTitle>\n                  <CardDescription>\n                    Log your daily symptoms and mood\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <Button \n                    onClick={() => setShowSymptomTracker(true)}\n                    className=\"w-full\"\n                    variant=\"outline\"\n                  >\n                    Add Today's Symptoms\n                  </Button>\n                </CardContent>\n              </Card>\n              <SymptomChart />\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"insights\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Cycle Insights</CardTitle>\n                  <CardDescription>\n                    Personalized insights based on your data\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {analytics && (\n                      <>\n                        <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                          <h4 className=\"font-medium text-blue-900 dark:text-blue-100 mb-2\">\n                            Cycle Regularity\n                          </h4>\n                          <p className=\"text-sm text-blue-700 dark:text-blue-300\">\n                            Your cycles are {analytics.cycleRegularity}. \n                            {analytics.cycleRegularity === 'regular' \n                              ? ' This makes predictions more accurate!' \n                              : ' Consider tracking more data for better predictions.'\n                            }\n                          </p>\n                        </div>\n                        \n                        <div className=\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n                          <h4 className=\"font-medium text-green-900 dark:text-green-100 mb-2\">\n                            Fertility Window\n                          </h4>\n                          <p className=\"text-sm text-green-700 dark:text-green-300\">\n                            Your fertile window is typically from {' '}\n                            {new Date(analytics.fertilityWindow.start).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })} to {' '}\n                            {new Date(analytics.fertilityWindow.end).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}.\n                          </p>\n                        </div>\n\n                        <div className=\"p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\n                          <h4 className=\"font-medium text-purple-900 dark:text-purple-100 mb-2\">\n                            Data Quality\n                          </h4>\n                          <p className=\"text-sm text-purple-700 dark:text-purple-300\">\n                            You have {analytics.totalCycles} cycles recorded. \n                            {analytics.totalCycles < 3 \n                              ? ' Track a few more cycles for more accurate predictions.' \n                              : ' Great job maintaining consistent tracking!'\n                            }\n                          </p>\n                        </div>\n                      </>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Health Tips</CardTitle>\n                  <CardDescription>\n                    General wellness recommendations\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg\">\n                      <h4 className=\"font-medium text-yellow-900 dark:text-yellow-100 mb-2\">\n                        💧 Stay Hydrated\n                      </h4>\n                      <p className=\"text-sm text-yellow-700 dark:text-yellow-300\">\n                        Drinking plenty of water can help reduce bloating and cramps during your period.\n                      </p>\n                    </div>\n                    \n                    <div className=\"p-4 bg-pink-50 dark:bg-pink-900/20 rounded-lg\">\n                      <h4 className=\"font-medium text-pink-900 dark:text-pink-100 mb-2\">\n                        🧘‍♀️ Manage Stress\n                      </h4>\n                      <p className=\"text-sm text-pink-700 dark:text-pink-300\">\n                        High stress levels can affect your cycle. Try meditation or gentle exercise.\n                      </p>\n                    </div>\n\n                    <div className=\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n                      <h4 className=\"font-medium text-green-900 dark:text-green-100 mb-2\">\n                        🥗 Balanced Nutrition\n                      </h4>\n                      <p className=\"text-sm text-green-700 dark:text-green-300\">\n                        Iron-rich foods and omega-3 fatty acids can help with period symptoms.\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </main>\n\n      {/* Dialogs */}\n      <QuickLogDialog open={showQuickLog} onOpenChange={setShowQuickLog} />\n      <SymptomTracker open={showSymptomTracker} onOpenChange={setShowSymptomTracker} />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}